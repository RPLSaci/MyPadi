{"mappings":"AAAA,eAAe;IACX,IAAI;QACF,IAAI,QAAQ,aAAa,OAAO,CAAC,SAAS,+CAA+C;QAEzF,QAAQ,KAAK,KAAK,CAAC,OAAO,KAAK;QAC/B,IAAI,CAAC,OAAO;YACV,MAAM;YACN,OAAO,SAAS,QAAQ,CAAC,IAAI,GAAC;QAChC;QAEA,MAAM,WAAW,MAAM,MAAM,UAAU,GAAG,GAAC,cAAc;YACvD,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC;YACpC;QACF;QAEA,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,MAAM;YACN,sFAAsF;YACtF,aAAa,KAAK;YAClB;QACF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,IAAI,SAAS,EAAE,EAAE;YACf,SAAS,aAAa,CAAC,gBAAgB,SAAS,GAAG,CAAC,6CAA6C,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC;YACtH,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,mBAAmB,CAAC;QAElD,8DAA8D;QAChE,OACE,MAAM;QAER;IACF,EAAE,OAAO,OAAO;QACd,SAAS,aAAa,CAAC,YAAY,KAAK,CAAC,YAAY,GAAG;QACxD,IAAI,gBAAgB,SAAS,cAAc,CAAC;QAC5C,cAAc,KAAK,CAAC,OAAO,GAAG;QAC9B,WAAW;YACT,MAAM,eAAe,SAAS,cAAc,CAAC;YAC7C,IAAI,cACA,aAAa,KAAK,CAAC,OAAO,GAAG;QAErC,GAAG;QAEH,6BAA6B;QAC7B,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,SAAS;YAC7D,MAAM,eAAe,SAAS,cAAc,CAAC;YAC7C,IAAI,cACA,aAAa,KAAK,CAAC,OAAO,GAAG;QAErC;QAEE,QAAQ,KAAK,CAAC;QACd,SAAS,cAAc,CAAC,YAAY,SAAS,CAAC,MAAM,CAAC;IACrD,0CAA0C;IAC5C;AACJ;AAEA,eAAe;IACb,IAAI;QACF,IAAI,QAAQ,aAAa,OAAO,CAAC,SAAS,+CAA+C;QAEzF,QAAQ,KAAK,KAAK,CAAC,OAAO,KAAK;QAE/B,MAAM,WAAW,MAAM,MAAM,UAAU,GAAG,GAAC,cAAc;YACvD,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC;YACpC;QACF;IACF,EAAE,OAAO,OAAO,CAEhB;IAEA,IAAI;QACF;IACF,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AAGA,SAAS;IACP,IAAI,UAAU,WAAW,EACrB,UAAU,WAAW,CAAC,kBAAkB,CAAC;SAEzC,MAAM;AAEZ;AAGA,SAAS,oBAAoB,UAAU;IACrC,IAAI,UAAU,AAAC,CAAA,aAAa,EAAC,IAAK,IAAI;IACtC,OAAO;AACT;AAEA,eAAe,aAAa,QAAQ;IAClC,IAAI,MAAM,SAAS,MAAM,CAAC,QAAQ;IAClC,IAAI,OAAO,SAAS,MAAM,CAAC,SAAS;IAEpC,MAAM,WAAW;QAAE;QAAI;IAAK;IAExB,MAAM,WAAW,MAAM,MAAM,UAAU,GAAG,GAAC,eAAe;QACxD,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAGA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,QAAQ,GAAG,CAAC;AACZ,8DAA8D;AAC9D,mEAAmE;AACnE,8EAA8E;AAC9E,gFAAgF;AAChF,oFAAoF;AAEpF,GAAG;AAEH,gFAAgF;AAChF,qCAAqC;AACrC,wBAAwB;AAE9B;AAEA;AAGA,IAAI,aAAa,CAAC;;AAElB,CAAC","sources":["src/assets/js/index.js"],"sourcesContent":["async function checkLogin() {\n    try {\n      let token = localStorage.getItem('user'); // Assuming the token is stored in localStorage\n\n      token = JSON.parse(token).token\n      if (!token) {\n        alert('Anda belum masuk. Silakan masuk terlebih dahulu.');\n        return document.location.href=\"./login.html\";\n      }\n  \n      const response = await fetch(globalvar.api+'checkLogin', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n  \n      if (response.status === 401) {\n        alert('Token tidak valid atau sesi telah berakhir. Silakan masuk kembali.');\n        // If the token is invalid, you can also consider clearing the token from localStorage\n        localStorage.clear()\n        return;\n      }\n  \n      const data = await response.json();\n      if (response.ok) {\n        document.querySelector(\"#namalanding\").innerHTML = `Selamat Datang <span style=\"color: #026b38;\">${data.user}</span>.`\n        console.log(`Halo ${data.user}! Anda sudah masuk.`);\n\n        // document.getElementById(\"cards\").classList.remove(\"hidden\")\n      } else {\n        alert('Gagal memeriksa status masuk.');\n      }\n      checkUserInfo()\n    } catch (error) {\n      document.querySelector(\"#landing\").style.marginBottom = \"1rem\"\n      let alertElement1 = document.getElementById('alert');\n      alertElement1.style.display = \"block\"\n      setTimeout(() => {\n        const alertElement = document.getElementById('alert');\n        if (alertElement) {\n            alertElement.style.display = 'none';\n        }\n    }, 3000);\n\n    // Hide alert on button click\n    document.getElementById('closeButton').addEventListener('click', () => {\n        const alertElement = document.getElementById('alert');\n        if (alertElement) {\n            alertElement.style.display = 'none';\n        }\n    });\n\n      console.error(error);\n      document.getElementById(\"loginwoi\").classList.toggle(\"hidden\")\n      // document.location.href = \"./login.html\"\n    }\n}\n\nasync function checkUserInfo(){\n  try {\n    let token = localStorage.getItem('user'); // Assuming the token is stored in localStorage\n\n    token = JSON.parse(token).token\n\n    const response = await fetch(globalvar.api+'checkLogin', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    \n  }\n\n  try {\n    getLocation()\n  } catch (error) {\n    alert(\"Please allow location detecting\")\n  }\n}\n\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n  } else {\n      alert(\"Geolocation is not supported by this browser.\");\n  }\n}\n\n\nfunction fahrenheitToCelsius(fahrenheit) {\n  var celsius = (fahrenheit - 32) * 5 / 9;\n  return celsius;\n}\n\nasync function showPosition(position) {\n  var lat = position.coords.latitude;\n  var long = position.coords.longitude;\n\n  const userData = { lat,long };\n  \n      const response = await fetch(globalvar.api+'getLocation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n  \n      const data = await response.json();\n      console.log(data)\n      // document.getElementById(\"cuaca\").classList.remove(\"hidden\")\n      // document.getElementById(\"lokasi\").innerText = data.location.name\n      // document.getElementById(\"status\").innerText = data.cond.weather.description\n      // document.getElementById(\"temp\").innerText = data.cond.weather.temp.cur +\"° C\"\n      // document.getElementById(\"urlFoto\").setAttribute(\"src\",data.cond.weather.icon.url)\n\n      // \n      \n      //                            <h2 class=\"card-title\" id=\"lokasi\">Purwakarta</h2>\n      // <p id=\"status\">sedikit berawan</p>\n      // <p id=\"temp\">26°C</p>\n  \n}\n\ncheckLogin()\n\n\nlet strToCards = `\n\n`"],"names":[],"version":3,"file":"index.0a9f762f.js.map"}